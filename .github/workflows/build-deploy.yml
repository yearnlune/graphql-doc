name: build & deploy
on:
  push:
  pull_request:
jobs:
  java-build:
    name: Build java
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: corretto
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.2
      - name: Gradle build
        run: gradle graphql-doc-directive:build graphql-doc-directive-gradle-plugin:build
      - uses: actions/upload-artifact@v3
        with:
          name: directive artifacts
          path: graphql-doc-directive/build
      - uses: actions/upload-artifact@v3
        with:
          name: plugin artifacts
          path: graphql-doc-directive-gradle-plugin/build
  script-build:
    name: Build script
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: create-graphql-doc
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - run: corepack enable && yarn set version 3.2.0
      - name: Yarn build
        run: yarn install --immutable && yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: create-graphql-doc artifacts
          path: create-graphql-doc/lib/
  deploy-java:
    name: Publish directive
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: java-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: directive artifacts
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: corretto
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.2
      - name: Publish libraries
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: gradle graphql-doc-directive:publish --no-daemon
  deploy-plugin:
    name: Publish plugin
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: java-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: plugin artifacts
          path: graphql-doc-directive-gradle-plugin/build
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: corretto
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.2
      - id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: graphql-doc-directive-gradle-plugin/**
      - name: Publish plugin
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: gradle graphql-doc-directive-gradle-plugin:publishPlugins
  deploy-script:
    name: Publish script
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: script-build
    defaults:
      run:
        working-directory: create-graphql-doc
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: create-graphql-doc artifacts
          path: create-graphql/lib
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - run: corepack enable && yarn set version 3.2.0
      - id: tag
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:11})
      - run: node .ci/set-version ${{ steps.tag.outputs.tag }}
      - run: yarn install --immutable
      - run: yarn config set npmAuthToken $NODE_AUTH_TOKEN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish package
        run: yarn npm publish --access=public
